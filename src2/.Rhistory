hist(airbnb[!is.na(airbnb[,i]),i], breaks = "Sturges", title = names(airbnb)[i])
}
else if (typeof(airbnb[1,i]) == "logical")
{
#mosaicplot(airbnb[,i])
}
else if (typeof(airbnb[1,i]) == "double")
{
#hist(airbnb[,i])
}
else if (typeof(airbnb[1,i]) == "character")
{
#mosaicplot(airbnb[,i])
}
}
for (i in 1:ncol(airbnb)) {
if (typeof(airbnb[1,i]) == "integer")
{
hist(airbnb[!is.na(airbnb[,i]),i], breaks = "Sturges", main = names(airbnb)[i])
}
else if (typeof(airbnb[1,i]) == "logical")
{
#mosaicplot(airbnb[,i])
}
else if (typeof(airbnb[1,i]) == "double")
{
#hist(airbnb[,i])
}
else if (typeof(airbnb[1,i]) == "character")
{
#mosaicplot(airbnb[,i])
}
}
names(airbnb)
airbnb$name
typeof(name[1])
for (i in 1:ncol(airbnb)) {
if (is.numeric(airbnb[1,i]))
{
hist(airbnb[!is.na(airbnb[,i]),i], breaks = "Sturges", main = names(airbnb)[i], xlab = names(airbnb)[i])
}
else if (typeof(airbnb[1,i]) == "logical")
{
#mosaicplot(airbnb[,i])
}
else if (typeof(airbnb[1,i]) == "double")
{
#hist(airbnb[,i])
}
else if (typeof(airbnb[1,i]) == "character")
{
#mosaicplot(airbnb[,i])
}
}
for (i in 1:ncol(airbnb)) {
if (is.numeric(airbnb[1,i]))
{
hist(airbnb[!is.na(airbnb[,i]),i], breaks = "Sturges", main = names(airbnb)[i], xlab = names(airbnb)[i])
}
else if (typeof(airbnb[1,i]) == "logical")
{
mosaicplot(airbnb[,i])
}
else if (typeof(airbnb[1,i]) == "double")
{
#hist(airbnb[,i])
}
else if (typeof(airbnb[1,i]) == "character")
{
#mosaicplot(airbnb[,i])
}
}
names(airbnb)
hist(full)
hist(full, breaks = 3)
hist(full, breaks = 2)
hist(full, freq = T)
hist(count(full)~full)
hist(count(full))
hist(table(full))
table(full)
hist(full, table(full))
hist(full, freq = TRUE)
frequency(full)
barplot(full)
barplot(table(full))
par(mfrow=c(4,4))
for (i in 1:ncol(airbnb)) {
if (names(airbnb)[i] != "name")
{
if (is.numeric(airbnb[1,i]))
{
hist(airbnb[!is.na(airbnb[,i]),i], breaks = "Sturges", main = names(airbnb)[i], xlab = names(airbnb)[i])
}
else
{
barplot(table(airbnb[,i]), main = names(airbnb)[i], xlab = names(airbnb)[i])
}
}
else{
plot(1,1)
}
}
for (i in 1:ncol(airbnb)) {
if (names(airbnb)[i] != "name" && names(airbnb)[i] != "host_name")
{
if (is.numeric(airbnb[1,i]))
{
hist(airbnb[!is.na(airbnb[,i]),i], breaks = "Sturges", main = names(airbnb)[i], xlab = names(airbnb)[i])
}
else
{
barplot(table(airbnb[,i]), main = names(airbnb)[i], xlab = names(airbnb)[i])
}
}
else{
plot(1,1)
}
}
barplot(table(neighbourhood_group))
table(neighbourhood_group)
head(neighbourhood_group)
unique(neighbourhood_group)
nrow(airbnb$neighbourhood_group[!is.na(airbnb$neighbourhood_group)])
airbnb$neighbourhood_group[!is.na(airbnb$neighbourhood_group)]
airbnb$neighbourhood_group[is.na(airbnb$neighbourhood_group)]
nrow(airbnb$neighbourhood_group[is.na(airbnb$neighbourhood_group)]) == nrow(airbnb$neighbourhood_group)
nrow(airbnb$neighbourhood_group[is.na(airbnb$neighbourhood_group)]) ==
nrow(airbnb$neighbourhood_group)
nrow(neighbourhood_group)
t = TRUE
for (i in 1:nrow(airbnb)) {
if(!is.na(airbnb$neighbourhood_group)){
t = FALSE
}
}
t
allNA = false
for (i in 1:nrow(airbnb)) {
if(!is.na(airbnb$neighbourhood_group)){
allNA = FALSE
}
}
allNA
allNA = FALSE
for (i in 1:nrow(airbnb)) {
if(!is.na(airbnb$neighbourhood_group)){
allNA = TRUE
}
}
allNA
allNA = TRUE
for (i in 1:nrow(airbnb)) {
if(!is.na(airbnb$neighbourhood_group)){
allNA = FALSE
}
}
allNA
airbnb$neighbourhood_group = NULL
attach(airbnb)
par(mfrow=c(3,5))
for (i in 1:ncol(airbnb)) {
if (names(airbnb)[i] != "name" && names(airbnb)[i] != "host_name")
{
if (is.numeric(airbnb[1,i]))
{
hist(airbnb[!is.na(airbnb[,i]),i], breaks = "Sturges", main = names(airbnb)[i], xlab = names(airbnb)[i])
}
else
{
barplot(table(airbnb[,i]), main = names(airbnb)[i], xlab = names(airbnb)[i])
}
}
else{
plot(1,1)
}
}
par(mfrow=c(5,3))
for (i in 1:ncol(airbnb)) {
if (names(airbnb)[i] != "name" && names(airbnb)[i] != "host_name")
{
if (is.numeric(airbnb[1,i]))
{
hist(airbnb[!is.na(airbnb[,i]),i], breaks = "Sturges", main = names(airbnb)[i], xlab = names(airbnb)[i])
}
else
{
barplot(table(airbnb[,i]), main = names(airbnb)[i], xlab = names(airbnb)[i])
}
}
else{
plot(1,1)
}
}
par(mfrow=c(5,3))
for (i in 1:ncol(airbnb)) {
if (names(airbnb)[i] != "name" && names(airbnb)[i] != "host_name")
{
if (is.numeric(airbnb[1,i]))
{
hist(airbnb[!is.na(airbnb[,i]),i], breaks = "Sturges", main = names(airbnb)[i], xlab = names(airbnb)[i])
}
else
{
barplot(table(airbnb[,i]), main = names(airbnb)[i], xlab = names(airbnb)[i])
}
}
else{
plot(1,1)
}
}
length(names(airbnb))
ncol(airbnb)
###########################################################
###############   Load and format data   ##################
###########################################################
# set wd
wd = dirname(rstudioapi::getActiveDocumentContext()$path); wd
setwd(wd)
# TODO als je kijkt op see data vissualy hebben we te veel rows...
# eerst alle data apart inlezen van Gent, Antwerpen en Brussel
gent = read.csv("listingsGhent16_04_2019.csv", header = TRUE, sep = ",", dec = ".")
gent$city = "Gent"
antwerpen = read.csv("listingsAntwerp20_04_2019.csv", header = TRUE, sep = ",", dec = ".")
antwerpen$city = "Antwerpen"
brussel = read.csv("listingsBrussels13_04_2019.csv", header = TRUE, sep = ",", dec = ".")
brussel$city = "Brussel"
# dataframes samenvoegen
airbnb = rbind(gent, antwerpen, brussel)
# test of dat alle rows van de drie data frames in de nieuwe dataframe zitten
#   naive test, enkel op aantal rijen gebaseerd
nrow(airbnb) == (nrow(gent) + nrow(antwerpen) + nrow(brussel))
names(airbnb[airbnb$city == "Gent",]) ; names(gent)
nrow(airbnb[airbnb$city == "Gent",]) ; nrow(gent)
comp = airbnb[airbnb$city == "Gent",]
head(comp); head(gent)
attributes(airbnb)$names
# price == 0 -> NA
airbnb$price[airbnb$price == 0] = NA
# minimum_nights > 365 -> NA
airbnb$minimum_nights[airbnb$minimum_nights > 365] = NA
# Full == verhuurd == 0 dagen vrij
airbnb$full = FALSE
airbnb$full[airbnb$availability_365 == 0] = TRUE
airbnb$last_review[airbnb$last_review == ""] = NA
airbnb$last_review = as.Date(airbnb$last_review)
# TODO!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# last_review aanpassen brussel
airbnb$date_compiled = as.Date("2019-04-13")
datum = as.Date("2019-04-13");
airbnb$date_compiled[airbnb$city == "Brussel"] = as.Date(datum)
# last_review aanpassen Gent
datum = "2019-04-16"
airbnb$date_compiled[airbnb$city == "Gent"] = as.Date(datum)
# last_review aanpassen Antwerpen
datum = "2019-04-20";
airbnb$date_compiled[airbnb$city == "Antwerpen"] = as.Date(datum)
airbnb$last_review =  as.integer(airbnb$date_compiled) - as.integer(airbnb$last_review)
# airbnb$last_review[is.na(airbnb$last_review)] =
airbnb$date_compiled = NULL
allNA = TRUE
for (i in 1:nrow(airbnb)) {
if(!is.na(airbnb$neighbourhood_group)){
allNA = FALSE
}
}
allNA
# neighbourhood is all NA, so we drop it
airbnb$neighbourhood_group = NULL
ncol(airbnb)
names(airbnb)
par(mfrow=c(6,3))
for (i in 1:ncol(airbnb)) {
if (names(airbnb)[i] != "name" && names(airbnb)[i] != "host_name")
{
if (is.numeric(airbnb[1,i]))
{
hist(airbnb[!is.na(airbnb[,i]),i], breaks = "Sturges", main = names(airbnb)[i], xlab = names(airbnb)[i])
}
else
{
barplot(table(airbnb[,i]), main = names(airbnb)[i], xlab = names(airbnb)[i])
}
}
else{
plot(1,1)
}
}
plot(1,1)
svg(filename="visual.svg",
width=3*8,
height=6*8,
pointsize=12)
par(mfrow=c(6,3))
for (i in 1:ncol(airbnb)) {
if (names(airbnb)[i] != "name" && names(airbnb)[i] != "host_name")
{
if (is.numeric(airbnb[1,i]))
{
hist(airbnb[!is.na(airbnb[,i]),i], breaks = "Sturges", main = names(airbnb)[i], xlab = names(airbnb)[i])
}
else
{
barplot(table(airbnb[,i]), main = names(airbnb)[i], xlab = names(airbnb)[i])
}
}
else{
plot(1,1)
}
}
plot(1,1)
dev.off()
for (i in 1:ncol(airbnb)) {
if (names(airbnb)[i] != "name" && names(airbnb)[i] != "host_name")
{
if (is.numeric(airbnb[1,i]))
{
hist(airbnb[!is.na(airbnb[,i]),i], breaks = "Sturges", main = names(airbnb)[i], xlab = names(airbnb)[i], xlim = quantile(airbnb[,i], c(0.95), na.rm = TRUE))
}
else
{
barplot(table(airbnb[,i]), main = names(airbnb)[i], xlab = names(airbnb)[i])
}
}
else{
plot(1,1)
}
}
quantile(airbnb[,i], c(0.95), na.rm = TRUE)
quantile(price, c(0.95), na.rm = TRUE)
quantile(price, c(0.95), na.rm = TRUE)[1]
quantile(price, c(0.95), na.rm = TRUE)[1] + 1
for (i in 1:ncol(airbnb)) {
if (names(airbnb)[i] != "name" && names(airbnb)[i] != "host_name")
{
if (is.numeric(airbnb[1,i]))
{
hist(airbnb[!is.na(airbnb[,i]),i], breaks = "Sturges", main = names(airbnb)[i], xlab = names(airbnb)[i], xlim = quantile(airbnb[,i], c(0.95), na.rm = TRUE)[1])
}
else
{
barplot(table(airbnb[,i]), main = names(airbnb)[i], xlab = names(airbnb)[i])
}
}
else{
plot(1,1)
}
}
quantile(price)
quantile(price, na.rm=true)
quantile(price, na.rm=T)
quantile(price, na.rm=T)[[1]]
for (i in 1:ncol(airbnb)) {
if (names(airbnb)[i] != "name" && names(airbnb)[i] != "host_name")
{
if (is.numeric(airbnb[1,i]))
{
hist(airbnb[!is.na(airbnb[,i]),i], breaks = "Sturges", main = names(airbnb)[i], xlab = names(airbnb)[i], xlim = quantile(airbnb[,i], c(0.95), na.rm = TRUE)[[1]])
}
else
{
barplot(table(airbnb[,i]), main = names(airbnb)[i], xlab = names(airbnb)[i])
}
}
else{
plot(1,1)
}
}
for (i in 1:ncol(airbnb)) {
if (names(airbnb)[i] != "name" && names(airbnb)[i] != "host_name")
{
if (is.numeric(airbnb[1,i]))
{
hist(airbnb[!is.na(airbnb[,i]),i], breaks = "Sturges", main = names(airbnb)[i], xlab = names(airbnb)[i], xlim = as.numeric((quantile(airbnb[,i], c(0.95), na.rm = TRUE)[[1]])) )
}
else
{
barplot(table(airbnb[,i]), main = names(airbnb)[i], xlab = names(airbnb)[i])
}
}
else{
plot(1,1)
}
}
for (i in 1:ncol(airbnb)) {
if (names(airbnb)[i] != "name" && names(airbnb)[i] != "host_name")
{
if (is.numeric(airbnb[1,i]))
{
hist(airbnb[!is.na(airbnb[,i]) && airbnb[,i] < as.numeric((quantile(airbnb[,i], c(0.95), na.rm = TRUE)[[1]])),i], breaks = "Sturges", main = names(airbnb)[i], xlab = names(airbnb)[i] )
}
else
{
barplot(table(airbnb[,i]), main = names(airbnb)[i], xlab = names(airbnb)[i])
}
}
else{
plot(1,1)
}
}
par(mfrow=c(6,3))
for (i in 1:ncol(airbnb)) {
if (names(airbnb)[i] != "name" && names(airbnb)[i] != "host_name")
{
if (is.numeric(airbnb[1,i]))
{
hist(airbnb[!is.na(airbnb[,i]) && airbnb[,i] < as.numeric((quantile(airbnb[,i], c(0.95), na.rm = TRUE)[[1]])),i], breaks = "Sturges", main = names(airbnb)[i], xlab = names(airbnb)[i] )
}
else
{
barplot(table(airbnb[,i]), main = names(airbnb)[i], xlab = names(airbnb)[i])
}
}
else{
plot(1,1)
}
}
for (i in 1:ncol(airbnb)) {
if (names(airbnb)[i] != "name" && names(airbnb)[i] != "host_name")
{
if (is.numeric(airbnb[1,i]))
{
hist(airbnb[!is.na(airbnb[,i]) && airbnb[,i] < as.numeric((quantile(airbnb[,i], c(0.50), na.rm = TRUE)[[1]])),i], breaks = "Sturges", main = names(airbnb)[i], xlab = names(airbnb)[i] )
}
else
{
barplot(table(airbnb[,i]), main = names(airbnb)[i], xlab = names(airbnb)[i])
}
}
else{
plot(1,1)
}
}
for (i in 1:ncol(airbnb)) {
if (names(airbnb)[i] != "name" && names(airbnb)[i] != "host_name")
{
if (is.numeric(airbnb[1,i]))
{
hist(airbnb[!is.na(airbnb[,i]) ,i], breaks = 300, main = names(airbnb)[i], xlab = names(airbnb)[i] )
}
else
{
barplot(table(airbnb[,i]), main = names(airbnb)[i], xlab = names(airbnb)[i])
}
}
else{
plot(1,1)
}
}
if (names(airbnb)[i] != "name" && names(airbnb)[i] != "host_name")
for (i in 1:ncol(airbnb)) {
if (names(airbnb)[i] != "name" && names(airbnb)[i] != "host_name")
{
if (is.numeric(airbnb[1,i]))
{
hist(airbnb[!is.na(airbnb[,i]) ,i], breaks = 100, main = names(airbnb)[i], xlab = names(airbnb)[i] )
}
else
{
barplot(table(airbnb[,i]), main = names(airbnb)[i], xlab = names(airbnb)[i])
}
}
else{
plot(1,1)
}
}
if (names(airbnb)[i] != "name" && names(airbnb)[i] != "host_name")
for (i in 1:ncol(airbnb)) {
if (names(airbnb)[i] != "name" && names(airbnb)[i] != "host_name")
{
if (is.numeric(airbnb[1,i]))
{
hist(airbnb[!is.na(airbnb[,i]) ,i], breaks =  "Sturges", main = names(airbnb)[i], xlab = names(airbnb)[i] )
}
else
{
barplot(table(airbnb[,i]), main = names(airbnb)[i], xlab = names(airbnb)[i])
}
}
else{
plot(1,1)
}
}
plot(1,1)
par(mfrow=c(1,1))
par(mfrow=c(6,3))
for (i in 1:ncol(airbnb)) {
if (names(airbnb)[i] != "name" && names(airbnb)[i] != "host_name")
{
if (is.numeric(airbnb[1,i]))
{
hist(airbnb[!is.na(airbnb[,i]) ,i], breaks =  "Sturges", main = names(airbnb)[i], xlab = names(airbnb)[i] )
}
else
{
barplot(table(airbnb[,i]), main = names(airbnb)[i], xlab = names(airbnb)[i])
}
}
else{
plot(1,1)
}
}
barplot(room_type)
par(mfrow=c(1,1))
barplot(room_type)
barplot(room_type)
### Type verblijf
table(airbnb$room_type) # bevat geen NA's
barplot(table(room_type))
barplot(table(room_type))
table(room_type)
barplot(table(room_type))
